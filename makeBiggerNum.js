// 문제.
// 0 또는 양의 정수가 주어졌을 때, 정수를 이어 붙여 만들 수 있는 가장 큰 수를 알아내 주세요.
// 예를 들어, 주어진 정수가 [6, 10, 2]라면 [6102, 6210, 1062, 1026, 2610, 2106]를 만들 수 있고, 이중 가장 큰 수는 6210입니다.

// 전략
/**
 * 다음 방법 중 하나를 사용한다.
 * 1. 순서대로 조합하는 함수를 구성한 뒤, max로 찾아야 한다 (시간 엄청 걸릴듯 하다)
 * 2. 문제가 제시하는 방법으로 정렬할 수 있는 sort알고리즘을 구현한다.
 *
 * '001'과 같은 문자열은 '1'로 변해야 하기 때문에 숫자로 형변환 후에 문자열 출력 해야 한다.
 */

// 방법 - sort알고리즘 구현
/**
 * 1. 기본 sort메서드의 규칙을 지킨다. (인수 a, b가 있을때 반환값이 음수일 경우 a가 b보다 앞에 위치하게 된다.)
 * 2. 위 문제 예시에서 6은 2와 10보다 앞에 위치해야 하며, 2는 10보다 앞에 위치해야 한다. (배열의 index상에서)
 *
 * 3. sort메서드는 원본 배열을 변경시키므로 slice한 뒤 sort한다.
 */

/**@type {(numbers:number[])} */
function solution(numbers) {
  let temp = numbers.slice()
  temp.sort((a, b) => {
    let aa = Number(`${a}${b}`)
    let bb = Number(`${b}${a}`)
    return bb - aa
  })

  return String(BigInt(temp.join('')))
}
